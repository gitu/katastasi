name: main

on:
  pull_request:
  push:
    tags:
      - '*'
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.20.0'
          cache: true

      - uses: actions/setup-node@v3
        with:
          node-version: "current"
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json

      - name: npm install
        run: npm ci
        working-directory: ui

      - name: build frontend
        run: npm run build
        working-directory: ui

      - name: go mod tidy
        run: go mod tidy

      - name: run go tests
        run: go test ./pkg/...

      - name: run go generate
        run: go generate ./ui

      - uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('ui/package-lock.json') }}

      - name: install browsers
        working-directory: ui
        run: npx playwright install chromium

      - name: run npm e2e tests
        run: npm run test:e2e
        working-directory: ui

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser - snapshot
        uses: goreleaser/goreleaser-action@v4
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        with:
          distribution: goreleaser
          version: latest
          args: release --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser - release
        uses: goreleaser/goreleaser-action@v4
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Pushing image to ghcr.io
        if: github.ref == 'refs/heads/main'
        run: docker push ghcr.io/gitu/katastasi:latest

      - name: Showing difference
        run: git --no-pager diff
      - name: Checking for differences
        run: git diff-index --exit-code HEAD --

